//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFZene_Host.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEloado", ReplyAction="http://tempuri.org/IService1/InsertEloadoResponse")]
        string InsertEloado(WCFZene.Models.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEloado", ReplyAction="http://tempuri.org/IService1/InsertEloadoResponse")]
        System.Threading.Tasks.Task<string> InsertEloadoAsync(WCFZene.Models.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEloadok", ReplyAction="http://tempuri.org/IService1/GetEloadokResponse")]
        WCFZene.Models.Eloado[] GetEloadok();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEloadok", ReplyAction="http://tempuri.org/IService1/GetEloadokResponse")]
        System.Threading.Tasks.Task<WCFZene.Models.Eloado[]> GetEloadokAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEloado", ReplyAction="http://tempuri.org/IService1/UpdateEloadoResponse")]
        string UpdateEloado(WCFZene.Models.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEloado", ReplyAction="http://tempuri.org/IService1/UpdateEloadoResponse")]
        System.Threading.Tasks.Task<string> UpdateEloadoAsync(WCFZene.Models.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEloado", ReplyAction="http://tempuri.org/IService1/DeleteEloadoResponse")]
        string DeleteEloado(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEloado", ReplyAction="http://tempuri.org/IService1/DeleteEloadoResponse")]
        System.Threading.Tasks.Task<string> DeleteEloadoAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCFZene_Host.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCFZene_Host.ServiceReference1.IService1>, WCFZene_Host.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertEloado(WCFZene.Models.Eloado eloado) {
            return base.Channel.InsertEloado(eloado);
        }
        
        public System.Threading.Tasks.Task<string> InsertEloadoAsync(WCFZene.Models.Eloado eloado) {
            return base.Channel.InsertEloadoAsync(eloado);
        }
        
        public WCFZene.Models.Eloado[] GetEloadok() {
            return base.Channel.GetEloadok();
        }
        
        public System.Threading.Tasks.Task<WCFZene.Models.Eloado[]> GetEloadokAsync() {
            return base.Channel.GetEloadokAsync();
        }
        
        public string UpdateEloado(WCFZene.Models.Eloado eloado) {
            return base.Channel.UpdateEloado(eloado);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEloadoAsync(WCFZene.Models.Eloado eloado) {
            return base.Channel.UpdateEloadoAsync(eloado);
        }
        
        public string DeleteEloado(int id) {
            return base.Channel.DeleteEloado(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEloadoAsync(int id) {
            return base.Channel.DeleteEloadoAsync(id);
        }
    }
}
